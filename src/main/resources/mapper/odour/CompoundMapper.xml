<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjfu.li.odour.mapper.CompoundMapper">

    <resultMap id="CompoundRiMap" type="com.bjfu.li.odour.po.Compound">
        <id column="id" property="id"/>
        <result column="compound_name" property="compoundName"/>
        <result column="synonym" property="synonym"/>
        <result column="cas_no" property="casNo"/>
        <result column="chemical_structure" property="chemicalStructure"/>
        <result column="mass_spectrogram" property="massSpectrogram"/>
        <result column="mass_spectrogram_Nist" property="massSpectrogramNist"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="uploader" property="uploader"/>
        <result column="reviewer" property="reviewer"/>
        <result column="article" property="article"/>
        <result column="description" property="description"/>
        <result column="odour_base" property="odourBase"/>
        <result column="odour_threshold" property="odourThreshold"/>


        <collection property="riList" javaType="ArrayList" ofType="com.bjfu.li.odour.po.Ri">
            <id column="rid" property="id"/>
            <result column="compound_ri" property="compoundRi"/>
            <result column="chromatographic_column" property="chromatographicColumn"/>
            <result column="ri_resource" property="riResource"/>
            <result column="ri_compound_id" property="compoundId"/>
        </collection>

        <collection property="nriList" javaType="ArrayList" ofType="com.bjfu.li.odour.po.Nri">
            <id column="nrid" property="id"/>
            <result column="compound_nri" property="compoundNri"/>
            <result column="nri_chromatographic_column" property="chromatographicColumn"/>
            <result column="nri_resource" property="nriResource"/>
            <result column="nri_compound_id" property="compoundId"/>
        </collection>

        <collection property="otList" javaType="ArrayList" ofType="com.bjfu.li.odour.po.OdourThreshold">
            <id column="otrid" property="id"/>
            <result column="ot_odour_threshold" property="odourThreshold"/>
            <result column="ot_odour_base" property="odourBase"/>
            <result column="ot_odour_threshold_reference" property="odourThresholdReference"/>
            <result column="ot_compound_id" property="compoundId"/>
        </collection>

        <collection property="odList" javaType="ArrayList" ofType="com.bjfu.li.odour.po.OdourDescription">
            <id column="odrid" property="id"/>
            <result column="od_odour_description" property="odourDescription"/>
            <result column="od_odour_description_reference" property="odourDescriptionReference"/>
            <result column="od_compound_id" property="compoundId"/>
        </collection>


        <collection property="mrList" javaType="ArrayList" ofType="com.bjfu.li.odour.po.Measured">
            <id column="mrid" property="id"/>
            <result column="measured" property="measured"/>
            <result column="relative_abundance" property="relativeAbundance"/>
            <result column="high_compound_id" property="compoundId"/>
        </collection>

        <collection property="lowmrList" javaType="ArrayList" ofType="com.bjfu.li.odour.po.LowMeasured">
            <id column="lmrid" property="id"/>
            <result column="low_measured" property="measured"/>
            <result column="low_relative_abundance" property="relativeAbundance"/>
            <result column="low_compound_id" property="compoundId"/>
        </collection>
    </resultMap>
    <resultMap id="DownloadMap" type="com.bjfu.li.odour.vo.DownloadVo">
        <id column="id" property="id"/>
        <result column="compound_name" property="compoundName"/>
        <result column="synonym" property="synonym"/>
        <result column="cas_no" property="casNo"/>

        <collection property="otList" javaType="ArrayList" ofType="com.bjfu.li.odour.po.OdourThreshold">
            <id column="ot_id" property="id"/>
            <result column="ot_odour_threshold" property="odourThreshold"/>
            <result column="ot_odour_base" property="odourBase"/>
            <result column="threshold_article_name" property="articleName"/>
        </collection>

        <collection property="odList" javaType="ArrayList" ofType="com.bjfu.li.odour.po.OdourDescription">
            <id column="od_id" property="id"/>
            <result column="od_odour_description" property="odourDescription"/>
            <result column="description_article_name" property="articleName"/>
        </collection>
    </resultMap>
    <select id="selectOne" resultMap="CompoundRiMap">
        SELECT c.*
        FROM compound AS c
        WHERE c.id = #{id};
    </select>
    <select id="selectAll" resultMap="CompoundRiMap">
        SELECT *
        FROM compound
        WHERE is_deleted = 0
    </select>
    <select id="dynamicSelect" resultMap="CompoundRiMap" parameterType="com.bjfu.li.odour.vo.SearchVo">
        SELECT *,
        <choose>
            <when test="searchVo.searchKind == 1">
                (SELECT COUNT(*) FROM odour_threshold ot WHERE ot.odour_base = #{searchVo.base}
                AND ot.compound_id = compound.id) as base_num
            </when>
            <otherwise>
                'x'
            </otherwise>
        </choose>,
        <choose>
            <when test="searchVo.searchKind == 2">
                (SELECT COUNT(*) FROM odour_intensity_function oif WHERE oif.odour_base = #{searchVo.base}
                AND oif.compound_id = compound.id) as base_num
            </when>
            <otherwise>
                'y'
            </otherwise>
        </choose>
               FROM compound
        <where>
            <if test="searchVo.searchRule == 'equal'">
                AND ${searchVo.searchProperty} = #{searchVo.searchValue}
            </if>
            <if test="searchVo.searchRule == 'large'">
                AND ${searchVo.searchProperty} &gt; #{searchVo.searchValue}
            </if>
            <if test="searchVo.searchRule == 'small'">
                AND ${searchVo.searchProperty} &lt; #{searchVo.searchValue}
            </if>
            <if test="searchVo.searchRule == 'like'">
                AND ${searchVo.searchProperty} like concat("%", #{searchVo.searchValue}, "%")
            </if>
            AND compound.is_deleted = 0
        </where>
        <if test="searchVo.searchKind != 0">
            HAVING base_num > 0
        </if>
    </select>
    <select id="selectByOdourDescription" resultMap="CompoundRiMap">
        SELECT compound.id,
               compound.compound_name,
               compound.synonym,
               compound.cas_no,
               compound.is_deleted,
               compound.update_time,
               MAX(od.odour_description) as description,
                <choose>
                    <when test="kind == 1">
                        (SELECT COUNT(*) FROM odour_threshold ot WHERE ot.odour_base = #{base}
                        AND ot.compound_id = compound.id) as base_num
                    </when>
                    <otherwise>
                        'x'
                    </otherwise>
                </choose>,
                <choose>
                    <when test="kind == 2">
                        (SELECT COUNT(*) FROM odour_intensity_function oif WHERE oif.odour_base = #{base}
                        AND oif.compound_id = compound.id) as base_num
                    </when>
                    <otherwise>
                        'y'
                    </otherwise>
                </choose>
        FROM compound
                 LEFT JOIN odour_description od ON od.compound_id = compound.id
        WHERE od.odour_description like "%"#{description}"%" AND compound.is_deleted = 0
        GROUP BY
            compound.id,
            compound.compound_name,
            compound.synonym,
            compound.cas_no,
            compound.is_deleted,
            compound.update_time
        <if test="kind != 0">
            HAVING base_num > 0
        </if>
    </select>
    <select id="selectByOdourThreshold" resultMap="CompoundRiMap">
        SELECT MAX(ot.odour_threshold) as odour_threshold,
               ot.compound_id,
               MAX(ot.odour_base) as odour_base,
               compound.id,
               compound.compound_name,
               compound.synonym,
               compound.cas_no,
               compound.is_deleted,
               compound.update_time
        FROM odour_threshold ot
                 INNER JOIN
             (SELECT MAX(ot2.odour_threshold) as maxthreshold, ot2.compound_id as comp_id FROM odour_threshold ot2
              WHERE ot2.odour_threshold between #{low} and #{high}
             <if test="kind == 1">
                 AND ot2.odour_base = #{base}
             </if>
              GROUP BY ot2.compound_id) as max_table
             ON ot.compound_id = max_table.comp_id
        LEFT JOIN compound ON ot.compound_id = compound.id
        WHERE ot.odour_threshold = max_table.maxthreshold
          AND compound.is_deleted = 0
        GROUP BY ot.compound_id,
                 compound.compound_name,
                 compound.synonym,
                 compound.cas_no,
                 compound.is_deleted,
                 compound.update_time
    </select>
    <select id="selectByRi" resultMap="CompoundRiMap">
        SELECT compound.id,
               compound.compound_name,
               compound.synonym,
               compound.cas_no,
               compound.is_deleted,
               compound.update_time
        FROM compound compound
                 LEFT JOIN ri ri ON ri.compound_id = compound.id
        WHERE ri.compound_ri between #{low} and #{high}
          AND compound.is_deleted = 0
        GROUP BY compound.id,
                 compound.compound_name,
                 compound.synonym,
                 compound.cas_no,
                 compound.is_deleted,
                 compound.update_time
    </select>
    <select id="selectByNri" resultMap="CompoundRiMap">
        SELECT compound.id,
               compound.compound_name,
               compound.synonym,
               compound.cas_no,
               compound.is_deleted,
               compound.update_time
        FROM compound compound
                 LEFT JOIN nri nri ON nri.compound_id = compound.id
        WHERE nri.compound_ri between #{low} and #{high}
          AND compound.is_deleted = 0
        GROUP BY compound.id,
                 compound.compound_name,
                 compound.synonym,
                 compound.cas_no,
                 compound.is_deleted,
                 compound.update_time
    </select>
    <select id="selectByMeasured" resultMap="CompoundRiMap">
        SELECT compound.id,
               compound.compound_name,
               compound.synonym,
               compound.cas_no,
               compound.is_deleted,
               compound.update_time

        FROM compound compound
                 LEFT JOIN measured measured ON measured.compound_id = compound.id
        WHERE measured.measured between #{low} and #{high}
          AND compound.is_deleted = 0
        GROUP BY compound.id,
                 compound.compound_name,
                 compound.synonym,
                 compound.cas_no,
                 compound.is_deleted,
                 compound.update_time
    </select>
    <select id="selectByLowMeasured" resultMap="CompoundRiMap">
        SELECT compound.id,
               compound.compound_name,
               compound.synonym,
               compound.cas_no,
               compound.is_deleted,
               compound.update_time
        FROM compound compound
                 LEFT JOIN low_measured low_measured ON low_measured.compound_id = compound.id
        WHERE low_measured.measured between #{low} and #{high}
          AND compound.is_deleted = 0
        GROUP BY compound.id,
                 compound.compound_name,
                 compound.synonym,
                 compound.cas_no,
                 compound.is_deleted,
                 compound.update_time
    </select>
    <select id="selectByProduct" resultMap="CompoundRiMap">
        SELECT compound.id,
               compound.compound_name,
               compound.synonym,
               compound.cas_no,
               compound.is_deleted,
               compound.update_time
        FROM compound compound
                 LEFT JOIN product_key pk ON pk.compound_id = compound.id
                 LEFT JOIN product product ON product.id = pk.product_id
        WHERE product.product_name like "%"#{product}"%"  AND compound.is_deleted = 0
        GROUP BY
            compound.id,
            compound.compound_name,
            compound.synonym,
            compound.cas_no,
            compound.is_deleted,
            compound.update_time
    </select>
    <select id="selectNewsList" resultMap="CompoundRiMap">
        select *
        from compound
        where is_deleted = 0
        order by update_time desc limit 5
    </select>
    <select id="advancedSearch" resultType="com.bjfu.li.odour.po.Compound">
        SELECT * FROM compound compound
        <foreach collection="map" item="v" index="k" separator=" ">
            <if test="k == 'odour_description'">
                LEFT JOIN odour_description od ON od.compound_id = compound.id
            </if>
            <if test="k == 'compound_ri'">
                LEFT JOIN ri r ON r.compound_id = compound.id
            </if>
            <if test="k == 'measured'">
                LEFT JOIN measured m ON m.compound_id = compound.id
            </if>

        </foreach>
        WHERE
        <foreach collection="map" item="v" index="k" separator="and">
            <if test="k == 'compound_name'">
                compound.compound_name LIKE CONCAT("%", #{v} ,"%")
            </if>
            <if test="k == 'cas_no'">
                compound.cas_no LIKE CONCAT("%", #{v} ,"%")
            </if>
            <if test="k == 'odour_description'">
                od.odour_description LIKE CONCAT("%", #{v} ,"%")
            </if>
            <if test="k == 'compound_ri'">
                r.compound_ri between #{v}-10 and #{v}+10
            </if>
            <if test="k == 'measured'">
                m.measured between #{v}-0.05 and #{v}+0.05
            </if>
        </foreach>
    </select>
    <select id="selectByCasPro" resultMap="CompoundRiMap">
        select c.*,
               ri.id as rid,ri.compound_ri,ri.chromatographic_column,ri.ri_resource as ri_resource,ri.compound_id as ri_compound_id,

               nri.id as nrid,nri.compound_nri,nri.chromatographic_column as nri_chromatographic_column,nri.nri_resource as nri_resource,nri.compound_id as nri_compound_id,
--        odour_threshold.id as otrid,odour_threshold.odour_threshold,odour_threshold.odour_threshold_reference,odour_threshold.odour_base,odour_threshold.compound_id as ot_compound_id,
               ot.id as otrid,ot.odour_threshold as ot_odour_threshold,ot.odour_threshold_reference as ot_odour_threshold_reference,ot.odour_base as ot_odour_base ,ot.compound_id as ot_compound_id,
--                odour_description.id as odrid,odour_description.odour_description,odour_description.odour_description_reference,odour_description.compound_id as od_compound_id,
               od.id as odrid,od.odour_description as od_odour_description,od.odour_description_reference as od_odour_description_reference,od.compound_id as od_compound_id,
               measured.id as mrid,measured.measured,measured.relative_abundance,measured.compound_id as high_compound_id,
               low_measured.id as lmrid,low_measured.measured as low_measured,low_measured.relative_abundance as low_relative_abundance,low_measured.compound_id as low_compound_id
-- from compound as c,ri,measured,nri,low_measured,odour_description,odour_threshold
        from compound as c,ri,measured,nri,low_measured,odour_description as od,odour_threshold as ot
        where c.id=ri.compound_id
          and c.id=nri.compound_id
          and c.id=ot.compound_id
          and c.id=od.compound_id
          and c.id=measured.compound_id
          and c.id=low_measured.compound_id
          and cas_no=#{casNo}
    </select>
    <select id="selectByCasUltra" resultMap="DownloadMap">
        SELECT c.id as id, c.compound_name as compound_name, c.synonym as synonym, c.cas_no as cas_no,
               ot.id as ot_id, ot.odour_threshold as ot_odour_threshold, ot.odour_base as ot_odour_base,
               od.id as od_id, od.odour_description as od_odour_description,
               a1.name as threshold_article_name, a2.name as description_article_name
        FROM compound c
        LEFT JOIN odour_threshold ot on c.id = ot.compound_id
        LEFT JOIN odour_description od on c.id = od.compound_id
        LEFT JOIN article a1 on ot.article_id = a1.pk
        LEFT JOIN article a2 on od.article_id = a2.pk
        WHERE c.cas_no = #{cas}
    </select>
    <update id="updateOne" parameterType="com.bjfu.li.odour.po.Compound">
        UPDATE `compound`
        SET compound_name = #{comp.compoundName}, synonym = #{comp.synonym}, cas_no = #{comp.casNo},
            chemical_structure = #{comp.chemicalStructure}, mass_spectrogram = #{comp.massSpectrogram},
            mass_spectrogram_nist = #{comp.massSpectrogramNist},
            update_time = #{comp.updateTime}, reviewer = #{comp.reviewer},
            is_deleted = #{comp.isDeleted},
            uploader = #{comp.uploader}, reviewer = #{comp.reviewer}
        WHERE id=#{comp.id}
    </update>
</mapper>
